{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '48710632-74e9a639a0cf21f0899e63b1f';\nconst BASE_URL = 'https://pixabay.com/api/';\n\n// key — твій унікальний ключ доступу до API.\n// q — слово для пошуку. Те, що буде вводити користувач.\n// image_type — тип зображення. Потрібні тільки фотографії, тому постав значення photo.\n// orientation — орієнтація фотографії. Постав значення horizontal.\n// safesearch — фільтр за віком. Постав значення true.\n\nexport function searchImages(query) {\n  const params = {\n    key: API_KEY,\n    q: query,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: 'true',\n  };\n  return axios\n    .get(BASE_URL, { params })\n    .then(response => {\n      return response.data.hits;\n    })\n    .catch(error => {\n      console.log(error);\n    });\n}\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst litebox = new SimpleLightbox('.gallery-list a', {\n  captionsData: 'alt',\n  captionDelay: 250,\n});\n\nexport const showErrorMessage = message => {\n  iziToast.error({\n    message,\n    position: 'topRight',\n    maxWidth: 432,\n  });\n};\n\nexport function renderAllCards(element, images) {\n  const markup = createAllCardsMarkup(images);\n  element.innerHTML = markup;\n  litebox.refresh();\n}\n\nexport function createAllCardsMarkup(images) {\n  return images.map(createCardMarkup).join('');\n}\n\nexport function createCardMarkup(image) {\n  return `<li class=\"gallery-item\">\n            <a href=\"${image.largeImageURL}\" class=\"gallery-link\">\n              <img\n                class=\"card-image\"\n                src=\"${image.webformatURL}\"\n                alt=\"${image.tags}\"\n                data-source=\"${image.largeImageURL}\"\n              />\n              <div class=\"card-texts\">\n                <div class=\"card-text-element likes\">\n                  <p class=\"element-title\">Likes</p>\n                  <p class=\"element-value\">${image.likes}</p>\n                </div>\n                <div class=\"card-text-element views\">\n                  <p class=\"element-title\">Views</p>\n                  <p class=\"element-value\">${image.views}</p>\n                </div>\n                <div class=\"card-text-element comments\">\n                  <p class=\"element-title\">Comments</p>\n                  <p class=\"element-value\">${image.comments}</p>\n                </div>\n                <div class=\"card-text-element downloads\">\n                  <p class=\"element-title\">Downloads</p>\n                  <p class=\"element-value\">${image.downloads}</p>\n                </div>\n              </div>\n            </a>\n          </li>`;\n}\n","'use strict';\n\nimport { searchImages } from './js/pixabay-api.js';\nimport { showErrorMessage, renderAllCards } from './js/render-functions.js';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  input: document.querySelector('.form-input'),\n  button: document.querySelector('.form-button'),\n  gallery: document.querySelector('.gallery-list'),\n  loader: document.querySelector('.loader'),\n};\n\nrefs.form.addEventListener('submit', handleFormSubmit);\nrefs.loader.style.display = 'none';\n\nfunction handleFormSubmit(event) {\n  event.preventDefault();\n  const value = event.currentTarget.elements.search.value.trim();\n  if (!value) {\n    showErrorMessage('Enter some value');\n    return;\n  }\n  renderAllCards(refs.gallery, []);\n  refs.loader.style.display = 'block';\n  searchImages(value)\n    .then(data => {\n      refs.loader.style.display = 'none';\n      if (data.length === 0) {\n        showErrorMessage(\n          'Sorry, there are no images matching your search query. Please try again!'\n        );\n      } else {\n        renderAllCards(refs.gallery, data);\n      }\n    })\n    .catch(error => {\n      refs.loader.style.display = 'none';\n      showErrorMessage('Sorry, something went wrong. Please try again!');\n    });\n}\n"],"names":["API_KEY","BASE_URL","searchImages","query","params","axios","response","error","litebox","SimpleLightbox","showErrorMessage","message","iziToast","renderAllCards","element","images","markup","createAllCardsMarkup","createCardMarkup","image","refs","handleFormSubmit","event","value","data"],"mappings":"owBAEA,MAAMA,EAAU,qCACVC,EAAW,2BAQV,SAASC,EAAaC,EAAO,CAClC,MAAMC,EAAS,CACb,IAAKJ,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,MAChB,EACE,OAAOE,EACJ,IAAIJ,EAAU,CAAE,OAAAG,EAAQ,EACxB,KAAKE,GACGA,EAAS,KAAK,IACtB,EACA,MAAMC,GAAS,CACd,QAAQ,IAAIA,CAAK,CACvB,CAAK,CACL,CCrBA,MAAMC,EAAU,IAAIC,EAAe,kBAAmB,CACpD,aAAc,MACd,aAAc,GAChB,CAAC,EAEYC,EAAmBC,GAAW,CACzCC,EAAS,MAAM,CACb,QAAAD,EACA,SAAU,WACV,SAAU,GACd,CAAG,CACH,EAEO,SAASE,EAAeC,EAASC,EAAQ,CAC9C,MAAMC,EAASC,EAAqBF,CAAM,EAC1CD,EAAQ,UAAYE,EACpBR,EAAQ,QAAO,CACjB,CAEO,SAASS,EAAqBF,EAAQ,CAC3C,OAAOA,EAAO,IAAIG,CAAgB,EAAE,KAAK,EAAE,CAC7C,CAEO,SAASA,EAAiBC,EAAO,CACtC,MAAO;AAAA,uBACcA,EAAM,aAAa;AAAA;AAAA;AAAA,uBAGnBA,EAAM,YAAY;AAAA,uBAClBA,EAAM,IAAI;AAAA,+BACFA,EAAM,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,6CAKLA,EAAM,KAAK;AAAA;AAAA;AAAA;AAAA,6CAIXA,EAAM,KAAK;AAAA;AAAA;AAAA;AAAA,6CAIXA,EAAM,QAAQ;AAAA;AAAA;AAAA;AAAA,6CAIdA,EAAM,SAAS;AAAA;AAAA;AAAA;AAAA,gBAK5D,CCrDA,MAAMC,EAAO,CACX,KAAM,SAAS,cAAc,OAAO,EACpC,MAAO,SAAS,cAAc,aAAa,EAC3C,OAAQ,SAAS,cAAc,cAAc,EAC7C,QAAS,SAAS,cAAc,eAAe,EAC/C,OAAQ,SAAS,cAAc,SAAS,CAC1C,EAEAA,EAAK,KAAK,iBAAiB,SAAUC,CAAgB,EACrDD,EAAK,OAAO,MAAM,QAAU,OAE5B,SAASC,EAAiBC,EAAO,CAC/BA,EAAM,eAAc,EACpB,MAAMC,EAAQD,EAAM,cAAc,SAAS,OAAO,MAAM,OACxD,GAAI,CAACC,EAAO,CACVb,EAAiB,kBAAkB,EACnC,MACD,CACDG,EAAeO,EAAK,QAAS,CAAA,CAAE,EAC/BA,EAAK,OAAO,MAAM,QAAU,QAC5BlB,EAAaqB,CAAK,EACf,KAAKC,GAAQ,CACZJ,EAAK,OAAO,MAAM,QAAU,OACxBI,EAAK,SAAW,EAClBd,EACE,0EACV,EAEQG,EAAeO,EAAK,QAASI,CAAI,CAEzC,CAAK,EACA,MAAMjB,GAAS,CACda,EAAK,OAAO,MAAM,QAAU,OAC5BV,EAAiB,gDAAgD,CACvE,CAAK,CACL"}